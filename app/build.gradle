plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'de.lemke.sudoku'
    compileSdk 33

    defaultConfig {
        applicationId "de.lemke.sudoku"
        minSdk 26
        targetSdk 33
        versionCode 28
        versionName "3.0.5"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
        resourceConfigurations += ['en', 'de']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only your project's release build type.
            minifyEnabled true
            // Enables resource shrinking, which is performed by the Android Gradle plugin.
            shrinkResources true
            // Includes the default ProGuard rules files that are packaged with the Android Gradle plugin.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            ndk {
                debugSymbolLevel 'FULL'
            }
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

configurations.all {
    exclude group: 'androidx.appcompat', module: 'appcompat'
    exclude group: 'androidx.core', module: 'core'
    exclude group: 'androidx.drawerlayout', module: 'drawerlayout'
    exclude group: 'androidx.viewpager', module: 'viewpager'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
    exclude group: 'androidx.fragment', module: 'fragment'
}

dependencies {
    implementation 'io.github.oneuiproject:design:1.2.3'
    implementation 'io.github.oneuiproject.sesl:appcompat:1.4.0'
    implementation 'io.github.oneuiproject.sesl:material:1.5.0'
    implementation 'io.github.oneuiproject.sesl:preference:1.1.0'
    implementation 'io.github.oneuiproject.sesl:recyclerview:1.4.0'
    implementation 'io.github.oneuiproject.sesl:picker-basic:1.2.0'
    implementation 'io.github.oneuiproject:icons:1.1.0'

    implementation 'de.sfuhrm:sudoku:5.0.1'
    implementation 'com.airbnb.android:lottie:6.0.0'
    implementation 'io.kjson:kjson:4.4'
    implementation 'net.pwall.json:json-kotlin-schema:0.39'

    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.core:core-animation:1.0.0-beta01'
    implementation "com.google.android.gms:play-services-games-v2:17.0.0"
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'androidx.asynclayoutinflater:asynclayoutinflater:1.0.0'

    implementation "androidx.datastore:datastore-preferences:1.0.0"
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    //kotlin 1.8 vs 1.7, kotlin-stdlib-jdk8 vs kotlin-stdlib-jdk7
    //https://github.com/facebook/react-native/issues/35979
    //https://kotlinlang.org/docs/whatsnew18.html#usage-of-the-latest-kotlin-stdlib-version-in-transitive-dependencies
    //https://stackoverflow.com/questions/67744002/hilt-unsupported-metadata-version-in-kotlin

    //noinspection GradleDependency
    implementation 'androidx.core:core-ktx:1.9.0'
    //noinspection GradleDependency
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    //noinspection GradleDependency
    implementation 'com.google.dagger:hilt-android:2.42'
    //noinspection GradleDependency
    kapt 'com.google.dagger:hilt-compiler:2.42'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}